#include "data.h"
void sub_8112364(void);
void set_callback2(void(*func)(void));
void script_env_2_enable(void);
void * malloc_and_clear(u32 size);
void free(void *);
void pokemon_slot_purge(struct pokemon*);
u32 GiveMonToPlayer(struct pokemon*);
void c2_exit_to_overworld_1_continue_scripts_and_music(void);
void obj_and_aux_reset_all(void);
void pal_fade_control_and_dead_struct_reset(void);
void gpu_pal_allocator_reset(void);
void tasks_init(void);
void dp12_abort(void);
u8 task_add(void(*func)(u8),u8 priority);
void task_exec(void);
void task_del(u8 task_id);
void objc_exec(void);
void obj_sync_something(void);
void fade_and_return_progress_probably(void);
void gpu_tile_bg_drop_all_sets(u32);
void gpu_tilemap_apply(u8 bg_id, void *src, u16 mode, u16 offset_in_block);
void vblank_handler_set(void(*)(void));
void lcd_io_set(u8 reg, u16 value);
u16 lcd_io_get(u8 reg);
void bg_vram_setup(u8 bg_mode, struct bg_cfg *config_data, u8 config_num_entries);
u32 bgid_mod_x_offset(u8 bg_id, u32 delta, u8 mode);
u32 bgid_mod_y_offset(u8 bg_id, u32 delta, u8 mode);
u8 rbox_calc_and_send(struct rbox_short *);
void remo_clear_unk(void);
void bgid_set_tilemap(u8 bg_id, void *src);
void gpu_sync_bg_show(u8 bg_id);
void bg_config_2_something(u8 bg_id, u16, u8, u8, u8, u8);
void graphic_log_clear(void);
void *decompress_with_fallback(u8 bg_id, void *src, u16 size, u16 offset, u8 mode);
u8 decompress_stat_check(void);
void gpu_pal_apply(void *src, u16 dst_index, u16 num_bytes);
void bgid_send_tilemap(u8 bg_id);
u8 oak_fade(u32 bitmask, u8, u8, u8, u16 color);
void vblank_cb_080F4BFC(void);
u16 gpu_tile_obj_decompress_alloc_tag_and_upload_2(struct graphic *comped_graphic);
u16 gpu_tile_obj_alloc_tag_and_upload(struct graphic *uncomped_graphic);
u8 gpu_pal_obj_alloc_tag_and_apply(struct pal_graphic *uncomped_pal);
u8 template_instanciate_forward_search(struct objtemplate *,u16 x,u16 y,u8 field_43);
u8 template_instanciate_reverse_search(struct objtemplate *,u16 x,u16 y,u8 field_43);
void cb_8130FB8(struct obj*);
void box_print(u8 foo, u8 font, u8 x_in_pixel_inbox, u8 y_in_pixel_inbox, int bar, u8 baz, u8 *str);
void rboxid_bg_prepare(u8 rbox_id);
void rboxid_fill_pixels(u8 rbox_id,u8 filler);
void gpu_copy_to_tileset(u8 bgid, u8 *src, u16 size, u16 offset);
void *stdpal_get(u8 std_pal_id);
void rboxid_draw_810F2E8(u8 rbox_id, u8 unk, u16 char_name, u8 pal);
u8 rboxid_print(u8 rbox_id, u8 font, u8 *str, u8 x_in_box, u8 y_in_box, u8 text_speed, u32 field_10_in_remo);
u8 rbox_spawn(struct rbox_short *);
u16 pokemon_getattr(struct pokemon *,u8 dat_index);
u8 *int_to_str(u8 *dest, u32 value, u8 mode, u8 charlength);
void* u_int_to_str(u8* destination, u32 num, u8 formatting, u8 max_digits);
u32 umodsi3(u32 numerator, u32 denumerator);
u8 additem(u16 item, u16 num);
void pokemon_make_wrapper(struct pokemon* poke, u16 species, u8 lvl, u8 IVs, u8 pid_set, u32 PiD, u8 tid_set, u32 TiD);
u32 get_attributes_c(struct pokemon* poke_address, u8 request, void* dst);
void setflag(u16 flag);
u16 get_var_value(u16 varID);
void LZ77UnCompWram(const void* src, const void* dst);
u16 CalcCRC16(const u8 *data, s32 length);
u16 CalcCRC16WithTable(const u8 *data, u32 length);
void play_sound(u16 songID);
void set_attributes(struct pokemon* poke_address, u8 request, const void* new_value);
void calculate_stats_pokekmon(struct pokemon* poke_address);
char *gf_strcat(char *dst,char *src);
u8 declen(u32 input);
char *strcpy_xFF_terminated(char *dst, char *src);
void rboxid_flush(u8 rbox_id, u8 unk);
void rboxes_free(void);
void SetWarpDestination(s8 mapGroup, s8 mapNum, s8 warpId, s8 x, s8 y);
void get_mapName(u8 *dest, u16 regionMapId, u16 padLength);